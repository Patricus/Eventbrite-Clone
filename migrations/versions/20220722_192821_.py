"""empty message

Revision ID: 7046ba0dffc8
Revises: 69359766c3f0
Create Date: 2022-07-22 19:28:21.193348

"""
from alembic import op
import sqlalchemy as sa
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '7046ba0dffc8'
down_revision = '69359766c3f0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('category', sa.String(
                        length=255), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.Column('event_image_url', sa.String(
                        length=255), nullable=False),
                    sa.Column('date', sa.DateTime(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('price', sa.Float(), nullable=False),
                    sa.Column('max_occupancy', sa.Integer(), nullable=False),
                    sa.Column('tickets_available',
                              sa.Integer(), nullable=True),
                    sa.Column('street_address', sa.String(
                        length=255), nullable=False),
                    sa.Column('city', sa.String(length=255), nullable=False),
                    sa.Column('state', sa.String(length=100), nullable=False),
                    sa.Column('zip_code', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('tickets',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('attendee', sa.String(
                        length=30), nullable=False),
                    sa.Column('for_sale', sa.Boolean(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('event_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user_events',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('event_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'event_id')
                    )
    # ### end Alembic commands ###

    if environment == "production":
        op.execute(f"ALTER TABLE events SET SCHEMA {SCHEMA};")

    if environment == "production":
        op.execute(f"ALTER TABLE tickets SET SCHEMA {SCHEMA};")

    if environment == "production":
        op.execute(f"ALTER TABLE user_events SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_events')
    op.drop_table('tickets')
    op.drop_table('events')
    # ### end Alembic commands ###
